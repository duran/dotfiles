[core]
    # I do not care about merge message
    mergeoptions = --no-edit
    # Ignore files related with editors, etc.
    # TODO: Make this portable
    excludesfile = ~/.config/git/ignore
[status]
    # Show submodule change summary
    submoduleSummary = true
[push]
    # Merge without leaving add parent to new commit (aka forget dev branch)
    default = simple
    # Push tags along with the commits
    followTags = true
[rerere]
    # Remember diff resolutions (not sure how it works)
    enabled = true
[format]
    pretty = fuller
[color]
    # Add color to UI
    ui = true
    interactive = true
[commit]
    # Change default git template
    # TODO: Make this portable
    template = ~/.config/git/message
[merge]
    # vimdiff is great
    prompt = false
    tool = vimdiff
    conflictstyle = diff3
[mergetool]
    # Do not keep a backup of changes
    keepBackup = false
[diff]
    # vimdiff is great
    prompt = false
    tool = vimdiff
    mnemonicprefix = true
    algorithm = histogram
    colorMoved = dimmed_zebra
    colorMovedWS = ignore-all-space
[difftool]
    prompt = false
[am]
    # Never used this, maybe I should remove it
    threeWay = true
[submodule]
    recurse = true
[alias]
    # [DEFAULT]

    # add
    a = add
    # bisect
    # branch
    b = branch
    # count-objects (human format, verbose)
    du = count-objects --verbose --human-readable
    # checkout
    # clean (remove untracked files, incl ignored)
    cl = clean -x --force
    # clone
    # commit
    c = commit
    # diff (shorter, colorful, side-to-side)
    d = diff --color-words --minimal --diff-filter=M 
    # fetch
    f = fetch
    # grep
    # init
    # log (no merges, show files changed)
    l = log --raw --no-merges
    # merge
    m = merge
    # mergetool
    mt = mergetool
    # mv
    # pull
    # push
    p = push
    # rebase
    # reset
    # rm
    # show
    # status (short but showing the branch)
    s = status --short --branch
    # tag
    t = tag

    # [SHOW]

    alias = config --get-regexp '^alias.'
    branches = !git --no-pager branch --all "$@"
    recent = branch --all --sort=committerdate --format='%(committerdate:short): %(refname:short)'
    remotes = remote -v
    tags = tag -l
    stashes = stash list
    sync = fetch --all --prune
    people = shortlog --summary --email --numbered
    index = diff --cached

    # [COMBO]

    # fetch and merge
    fm = pull
    # add and commit
    ac = commit --all
    # directed oriented graph
    dog = log --all --decorate --oneline --graph  

    # [NEW COMMANDS FROM OPTIONS]
    wc = diff --numstat
    amend = commit --amend
    graph = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    update = add --update
    uncommit = reset --soft HEAD^
    unstage = checkout --
    credit = commit --amend --author "$1 <$2>" 

    # [NEW STUFF]

    # go to top level
    cd = !cd "$(git rev-parse --show-toplevel)"
    # pretty tree (with exa)
    tree = !exa --long --all --header --tree --git --git-ignore --ignore-glob=.git --color=always | $PAGER

    # TODO: clean this part
    unpushed = !git diff origin/$(git rev-parse --abbrev-ref HEAD)..HEAD
    create-graph = !git show-ref -s | git commit-graph write --stdin-commits
    rmrbranch = push origin --delete
    delete-local-merged = branch -d $(git branch --merged | grep -v '^*' | grep -v 'master' | tr -d '\n') # I do not know if this works
    undo = reset --soft HEAD^
    unstage = reset -q HEAD --
    nuke = !git branch -D $1 git push origin :$1

# origin alias: git clone github:rails/rails
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gist.github.com:"]
    insteadOf = "gist:"
[url "git@heroku.com:"]
    insteadOf = "heroku:"
